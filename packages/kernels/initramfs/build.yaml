requires:
- name: {{ .Values.modules_name }}
  category: {{ .Values.category }}
  version: ">=0"
env:
- PATH=$PATH:/usr/local/go/bin
- GOPATH=/luetbuild/go
- GO111MODULE=off
- CGO_ENABLED=0
package_dir: /initramfs
prelude:

# Inject bash on initramfs requires that bash is statically linked.
# To recompile bash it's needed sys-libs/ncurses[static-libs].

- >-
  export LUET_YES=true &&
  export FEATURES="-sandbox -usersandbox -ipc-sandbox -pid-sandbox -network-sandbox" &&
  entities merge -e portage --specs-dir /usr/share/macaroni/entities/ &&
  luet repo update &&
  luet i app-arch/upx-bin sys-apps/kmod sys-apps/which toolchain/meta-repo sys-devel/patch dev-python/cython sys-libs/timezone-data &&
  luet cleanup --purge-repos &&
  sed -i -e 's|#use static|use static|g' -e 's|+readline|+readline static|g' /var/git/meta-repo/kits/core-kit/app-shells/bash/bash-*.ebuild &&
  mkdir -p /etc/portage/patches/sys-apps/util-linux/ &&
  cp -vf util-linux/util-linux-2.38.1.ebuild /var/git/meta-repo/kits/core-kit/sys-apps/util-linux &&
  cp -vf util-linux/setsid-static.patch /etc/portage/patches/sys-apps/util-linux/ &&
  USE="static-libs tinfo" emerge sys-libs/ncurses -t -j &&
  USE="static-libs" emerge sys-libs/readline -t -j &&
  USE="static-libs zstd" emerge sys-apps/kmod -j &&
  USE="-python" emerge =sys-apps/util-linux-2.38.1 -t -j &&
  USE="static" emerge bash -t -j

- wget https://golang.org/dl/go{{.Values.golang_version}}.linux-{{.Values.arch}}.tar.gz -O golang.tar.gz

- >-
  eval 'mkdir -p /usr/local || true' &&
  tar -C /usr/local -xzf golang.tar.gz
- |
  mkdir -p /luetbuild/go/src/github.com/u-root && cd /luetbuild/go/src/github.com/u-root && \
  git clone https://github.com/u-root/u-root && cd u-root && git checkout "{{.Values.git_sha}}" -b build

- |
   cd /luetbuild/go/src/github.com/u-root/u-root && go build -ldflags '-s -w' && upx --brute -1 u-root && mv u-root /usr/bin/u-root

- mkdir /boot || true
- rm -rf $GOPATH/src/github.com/u-root/u-root/cmds/core/init
- cp -rf init $GOPATH/src/github.com/u-root/u-root/cmds/core/init

steps:

# grab deps library for udev probe init functionalities
- go get github.com/pilebones/go-udev
#- go get pault.ag/go/modprobe

- mkdir modules_copy
- find /luetbuild/modules/lib/modules/**/kernel/fs  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/lib  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/crypto  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/crypto  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/usb  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/hid  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/input  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/block  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/ata -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/md -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/virtio  -exec cp -r --parents {} ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/scsi  -exec cp -r --parents {} ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/md  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/nvme  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/video  -exec cp {} -r --parents ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/drivers/vfio  -exec cp {} -r --parents ./modules_copy \;
# paride kernel driver require parport
- find /luetbuild/modules/lib/modules/**/kernel/drivers/parport  -exec cp {} -r --parents ./modules_copy \;

# Ethernet + address family: af_packet
- find /luetbuild/modules/lib/modules/**/kernel/drivers/net/ethernet  -exec cp -r --parents {} ./modules_copy \;
- find /luetbuild/modules/lib/modules/**/kernel/net/packet  -exec cp --parents -r {} ./modules_copy \;

# Create modules.* files
- find /luetbuild/modules/lib/modules/**/modules.*  -exec cp -v {} -r --parents ./modules_copy \;
- >-
  PACKAGE_VERSION=${PACKAGE_VERSION%\+*} &&
  depmod -a ${PACKAGE_VERSION}-macaroni -b  modules_copy/luetbuild/modules/

# -files "$(which modprobe)" \
# -files "$(which losetup)" \
# -files "$(which mkdir)" \
# -files "$(which switch_root)" \
# -files "$(which mount)" \
# -files "$(which umount)" \
# -files "$(which blkid)" \
# -files "$(which depmod)" \

# u-root losetup implementation has only -d option
# github.com/u-root/u-root/cmds/core/losetup
# github.com/u-root/u-root/cmds/core/blkid \
# github.com/u-root/u-root/cmds/core/mount \
# github.com/u-root/u-root/cmds/core/umount \
- |
  cd $GOPATH/src/github.com/u-root/u-root && \
  u-root \
  -files "/luetbuild/loader.sh:loader" \
  -files "/luetbuild/modules_copy/luetbuild/modules/lib/modules:lib/modules" \
  -files "$(which setsid.static):usr/bin/setsid" \
  -files "$(which losetup.static):sbin/losetup" \
  -files "$(which blkid.static):sbin/blkid" \
  -files "$(which mount.static):bin/mount" \
  -files "$(which umount.static):bin/umount" \
  -files "$(which sh)" \
  -files "$(which bash)" \
  -format=cpio -build=bb -defaultsh="" \
  -o /luetbuild/initramfs.cpio \
  github.com/u-root/u-root/cmds/core/ls \
  github.com/u-root/u-root/cmds/core/dhclient \
  github.com/u-root/u-root/cmds/core/init \
  github.com/u-root/u-root/cmds/exp/modprobe \
  github.com/u-root/u-root/cmds/core/cat \
  github.com/u-root/u-root/cmds/core/echo \
  github.com/u-root/u-root/cmds/core/dmesg \
  github.com/u-root/u-root/cmds/core/lsmod \
  github.com/u-root/u-root/cmds/core/chroot \
  github.com/u-root/u-root/cmds/core/ip \
  github.com/u-root/u-root/cmds/core/switch_root \
  github.com/u-root/u-root/cmds/core/mkdir \
  github.com/u-root/u-root/cmds/core/sleep

- |
   PACKAGE_VERSION=${PACKAGE_VERSION%\+*} && \
   xz --check=crc32 -9 --lzma2=dict=1MiB \
      --stdout /luetbuild/initramfs.cpio \
      | dd conv=sync bs=512 \
      of=/boot/initramfs-vanilla-x86_64-${PACKAGE_VERSION}-macaroni

- >-
  PACKAGE_VERSION=${PACKAGE_VERSION%\+*} &&
  eval 'mkdir -p /initramfs/boot || true' &&
  cp -v /boot/initramfs-vanilla-x86_64-${PACKAGE_VERSION}-macaroni /initramfs/boot/

excludes:
- ^/luetbuild
- ^/root
